/*
 * pole.cpp
 *
 *  Created on: 2014/02/06
 *      Author: Shuhei
 */
#include "pole.hpp"

PoleFlow::PoleFlow(Params *params) : BaseFlow(params){
	stopWatchNumber = STOPWATCH_NUMBER_0;
};

void PoleFlow::Calc(){

	if(params->lastStep != params->correntStep){
		ResetStopWatch(stopWatchNumber);
		params->lastStep = params->correntStep;
	}
	params->correntStep = ConstrainInt(params->correntStep,0,STEP_NUM -1);
	int motionStep;
	switch(params->correntStep){
	case 0:
	case 1:
		motionStep = 0;
		break;
	case 2:
	case 3:
		motionStep = 1;
		break;
	default:
		motionStep = ConstrainInt(params->correntStep-2,0,MOTION_NUM-1);
		break;
	}
	int motionTime = SetArms(motionStep);
	switch(params->correntStep){
	case 0:
		break;
	case 3:
		params->connection->StartCall(true);
		if(!params->connection->GetConnection()){
			params->correntStep++;
			params->connection->StopCall();
		}
		break;
	default:
		if(motionTime > 0){
			if(!IsRunningStopWatch(stopWatchNumber)){
				StartStopWatch(stopWatchNumber);
			}
			int temp = GetStopWatchMillis(stopWatchNumber) > motionTime;
			if(temp){
				params->correntStep++;
			}
		}
		break;
	}



};

void PoleFlow::Initialize(){
	params->lastStep = 0;
	StopStopWatch(stopWatchNumber);
	ResetStopWatch(stopWatchNumber);
}

int PoleFlow::SetArms(int step){

#ifndef _IS_BLUE
	if(step != ConstrainInt(step,0,MOTION_NUM-1)){ params->relay = LOW; return -1;}
int i=0,table = step/10,point = step%10;
/*
2 Å~ 19 Å~ 224 = 8512 byteÇ™ÉÅÉÇÉä(óeó 8kb)Ç…èÊÇÈÇÕÇ∏Ç†ÇËÇ‹ÇπÇÒÇ≈ÇµÇΩÅBÅBÅB
*/
switch(table){
case 0:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{0,20,0,-46,-84,22,80,89,-17,-48,0,45,0,24,-56,75,-33,0,0,},
{0,20,0,-46,-84,22,80,-60,-31,-48,0,45,0,24,-56,75,-33,0,0,},
{0,21,0,-46,-84,0,80,-60,-35,-48,0,45,0,24,-56,75,-33,0,300,},
{0,20,0,-46,-84,-12,80,-60,-52,-48,12,38,23,24,-56,75,-33,0,300,},
{0,47,0,-46,-84,-19,80,-60,-61,-36,18,30,23,24,-56,75,-33,0,300,},
{0,46,0,-46,-84,-23,80,-60,-76,-35,23,32,10,24,-57,72,-33,0,300,},
{0,48,0,-46,-84,9,80,-50,-70,-33,23,27,-2,43,-57,75,-35,0,300,},
{0,48,0,-46,-84,8,80,-51,-65,-40,23,32,-70,24,-57,75,-35,0,300,},
{7,38,-8,-46,-84,13,80,-23,-80,-44,23,32,-23,10,-49,75,-35,0,300,},
{0,38,-13,-46,-84,72,80,-23,-66,-76,-11,32,-22,22,-50,75,-35,-26,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 1:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{7,38,-13,-46,-84,72,80,9,-66,-76,-11,32,-71,22,-50,75,-35,0,300,},
{0,14,-13,-46,-84,72,80,47,-66,-90,-11,28,-70,22,-50,75,-35,0,300,},
{0,14,-13,1,-84,72,80,47,-66,-90,-11,28,-70,22,-50,75,-35,0,300,},
{0,14,-13,-1,-84,72,80,47,-79,-7,0,-44,-69,22,-50,75,-35,0,300,},
{0,14,-13,30,-84,72,80,47,-79,-12,0,-71,74,22,-50,75,-35,0,300,},
{0,14,-13,30,-84,72,80,47,-64,-49,14,17,25,22,-50,75,-35,0,300,},
{0,14,-13,-71,-84,72,80,47,-64,-29,-1,-37,-50,22,-50,75,-35,0,300,},
{0,10,-6,-51,-84,72,80,47,-80,8,-2,-75,-50,22,-50,75,-35,25,1000,},
{0,14,-13,30,-84,72,80,47,-80,8,-2,-75,-50,70,55,-12,-16,25,300,},
{0,14,-13,30,-84,72,80,47,-80,8,1,-75,-50,80,41,0,-13,0,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 2:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{0,14,-13,35,-84,72,80,47,-80,34,1,-75,-50,80,22,-47,47,65,300,},
{0,14,-13,35,-84,72,80,47,-80,34,1,-75,-50,80,-11,-70,47,-29,300,},
{0,14,-13,35,-21,72,80,47,-80,34,1,-75,-17,43,-11,-70,47,80,300,},
{0,14,-13,35,-22,72,80,47,-80,34,1,-85,-17,69,-11,0,47,81,300,},
{0,14,-13,35,-20,72,80,47,-44,34,1,-85,-17,69,-11,0,47,81,300,},
{-20,14,-13,5,-21,72,80,47,-44,34,1,-85,-17,37,-11,-27,47,80,300,},
{-20,14,-13,5,-21,72,80,47,-44,34,1,-85,-17,37,-11,-50,47,80,300,},
{-20,14,-13,5,-21,72,80,47,-44,34,1,-85,7,37,-11,-50,47,81,1000,},
{-20,14,-13,5,-21,72,80,47,-80,21,52,-63,7,37,-11,-50,44,79,300,},
{-20,14,-13,5,-21,72,80,47,-80,21,52,-63,-83,37,-11,-50,47,77,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 3:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-20,14,-13,5,1,-50,80,47,-80,21,52,-63,-83,37,-11,-50,47,77,300,},
{-20,14,-13,5,1,-50,7,47,-80,21,52,-63,-83,37,-11,-50,47,77,300,},
{-20,-2,0,5,1,-50,7,47,-80,21,52,-63,-83,37,-11,-50,47,77,300,},
{-20,-2,0,5,40,-50,7,47,-80,21,52,-63,-83,37,-11,-50,47,77,300,},
{-20,-2,0,5,40,-34,7,47,-80,21,52,-63,-83,37,-11,-50,47,77,300,},
{-20,-2,0,5,40,-34,7,-11,-80,21,52,-63,-83,37,-11,-50,47,77,300,},
{-20,-2,0,-63,40,-34,7,-11,-80,21,52,-63,-83,37,-11,-50,47,77,300,},
{28,-2,0,-33,40,-34,7,-11,-80,21,52,-63,-83,37,-11,-50,47,77,300,},
{28,-2,0,-33,40,-34,7,-11,-80,21,52,-63,-83,37,-11,-50,59,-17,300,},
{28,-2,0,-33,40,-34,7,-11,-80,21,52,-63,-83,71,-11,-37,59,-17,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 4:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{28,-2,0,-33,40,-34,7,-11,-80,21,52,-63,-83,80,-11,-79,59,-17,300,},
{28,-2,0,-33,40,-34,7,-11,-80,21,52,-63,-83,80,-11,-79,59,76,300,},
{28,-2,0,-33,40,-34,7,-11,-80,21,52,-79,0,80,-11,-79,59,76,300,},
{28,-2,0,-33,40,-34,7,-11,-14,10,52,-90,30,80,-11,-79,59,76,300,},
{28,-2,0,-33,40,-34,7,-11,-14,21,52,-79,0,64,-11,-36,59,76,300,},
{28,-2,0,-33,3,-34,7,-24,-49,-1,3,-4,0,64,-11,-36,59,76,300,},
{28,-2,0,-33,3,-34,7,-24,-49,-1,3,-4,0,64,-11,-36,59,76,300,},
{28,-2,0,-33,3,-34,7,-24,-49,-1,3,-4,0,64,-11,-75,59,76,300,},
{28,-2,0,-33,3,-34,7,-24,-49,-1,3,-4,0,19,-11,-79,59,76,300,},
{28,-2,0,-33,3,-34,7,-24,-38,2,3,-31,0,19,-11,-79,59,76,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 5:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{28,-2,0,-33,3,-34,7,-24,-80,2,53,-50,11,19,-11,-79,59,76,300,},
{28,-2,0,-33,3,-34,7,-24,-80,2,53,-50,-44,19,-11,-79,59,76,300,},
{28,-2,0,-33,3,-34,7,-40,-80,2,53,-50,-44,19,-11,-79,59,-34,300,},
{28,-2,0,-33,3,-34,7,-40,-80,2,53,-50,-44,19,-11,-23,84,-34,300,},
{28,-2,0,-33,3,-34,7,-40,-80,2,53,-50,-44,80,0,-81,90,-34,300,},
{28,-2,0,-33,3,-34,7,-40,-80,2,53,-50,-44,80,0,-81,11,-34,300,},
{28,-2,0,-33,3,-34,7,-40,-80,2,53,-50,-44,80,0,-81,11,75,300,},
{28,-2,0,-33,3,-34,7,-40,-80,2,53,-50,3,80,0,-81,11,75,300,},
{28,-2,0,-33,3,-34,7,-40,-36,2,53,-60,3,80,0,-81,11,74,300,},
{28,-2,0,-33,1,-34,57,-40,-42,-27,53,-60,3,54,0,-10,11,74,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 6:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{28,-2,0,-33,1,-34,0,-40,-68,-27,53,-60,3,54,0,-10,11,74,300,},
{28,-2,0,-33,35,-34,0,-40,-80,-27,62,-60,3,54,0,-10,11,75,300,},
{28,-2,0,-33,22,-34,0,-40,-80,-27,30,-38,-3,54,0,-7,32,75,300,},
{28,-2,0,-33,22,-34,0,-40,-80,-27,30,-38,-64,80,0,-7,66,75,300,},
{28,-2,0,-33,22,-34,0,-40,-80,-2,30,-38,-64,54,-10,-7,66,79,300,},
{28,-2,0,-33,22,-34,0,6,-80,-2,30,-38,-64,54,-10,-7,66,82,300,},
{28,-2,0,-33,22,3,0,6,-80,28,30,-38,-64,54,-10,-7,66,81,300,},
{28,-2,0,-33,22,2,0,-51,-80,29,30,-48,-64,54,-11,-7,65,81,300,},
{28,-2,0,-33,22,2,0,-39,-80,29,51,-48,-36,54,-11,-7,64,80,300,},
{28,-2,0,-33,22,2,0,-40,-80,27,51,-38,-66,54,-10,-7,64,77,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 7:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{28,-2,0,-33,22,-34,0,-40,-80,27,52,-38,-66,54,-23,-7,43,80,300,},
{28,-2,0,-33,22,-34,0,-39,-80,29,52,-38,-66,54,-23,-7,80,-13,300,},
{28,-2,0,-33,22,-34,0,-40,-80,28,52,-38,-66,80,-10,-55,80,-13,300,},
{28,-2,0,-33,22,-34,0,-40,-80,28,52,-38,-66,80,-23,-55,48,20,300,},
{28,-2,0,-33,22,-34,0,-41,-80,28,52,-38,-19,80,-23,-55,48,75,300,},
{28,-2,0,-33,4,-34,12,-41,-80,28,52,-59,-70,80,-23,36,48,75,300,},
{28,-2,0,-33,4,-34,12,-41,-80,28,52,-59,-70,80,-23,36,90,-22,300,},
{28,-2,0,-33,4,-34,12,-41,-80,28,52,-59,-70,80,-23,-45,90,-22,300,},
{28,-2,0,-33,4,-34,12,-41,-80,28,52,-59,-70,80,-23,-45,56,-22,300,},
{28,-2,0,-33,4,-34,12,-41,-80,28,52,-59,-70,80,-23,-45,56,76,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 8:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{28,-2,0,-33,4,-34,12,-41,-80,28,52,-90,6,80,-23,-45,56,76,300,},
{28,-2,0,-33,4,-34,12,-41,-80,28,-7,-90,6,80,-23,-45,56,76,300,},
{28,-2,0,-33,4,-34,12,-41,-80,28,-7,-51,6,80,-23,-45,56,76,300,},
{28,-2,0,-33,4,-34,12,-41,-80,28,-7,-51,-68,80,-23,-45,56,76,300,},
{28,-2,0,-33,-18,-34,28,-41,-80,28,36,-51,-68,80,-23,9,56,76,300,},
{28,-2,0,-33,-18,-34,28,-41,-80,28,36,-51,-68,80,-23,9,56,76,300,},
{28,-2,0,-33,-18,-34,28,-41,-80,28,36,-51,37,80,-23,9,56,76,300,},
{28,-2,0,-33,-18,-34,28,-41,-80,28,36,-90,37,80,-23,9,56,90,300,},
{28,-2,0,-33,-18,-34,28,-41,-61,28,-27,-90,37,80,-23,9,56,90,300,},
{28,-2,0,-33,-21,-15,28,-41,-69,-4,-27,-90,37,55,-23,9,56,90,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 9:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{28,-2,0,-33,-21,-15,28,-41,-46,-1,9,-80,90,55,-23,9,56,90,300,},
{28,-2,0,-33,-21,-15,28,-41,-46,-1,9,-52,90,55,-23,9,40,90,300,},
{28,-2,0,-33,-21,-15,28,-41,-46,-1,9,-52,-70,55,-23,9,40,90,300,},
{31,-12,-39,-33,-21,-15,28,-41,-46,-1,9,-52,-65,55,-23,9,39,68,300,},
{31,-12,-39,-33,-21,-15,28,-41,-46,-1,9,-52,-65,55,-23,9,40,14,300,},
{31,-12,-39,-33,-21,-15,28,-41,-46,-1,9,-52,-65,80,-23,-26,90,14,300,},
{31,-12,-39,-33,-21,-15,28,-41,-46,-1,9,-52,-65,80,-23,-26,66,14,300,},
{31,-12,-39,-33,-21,-15,28,-41,-46,-1,9,-52,-65,80,-23,-26,66,84,300,},
{31,-12,-39,-33,-21,-15,28,-11,-46,-1,9,-52,-61,80,-23,-27,66,85,300,},
{51,-18,-39,-33,-21,-15,28,-11,-46,-1,9,-52,-61,70,-23,-16,66,85,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 10:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{51,-60,-39,-33,-21,-15,28,-11,-46,-1,9,-52,-61,70,-23,-16,66,85,300,},
{56,5,-29,-33,-34,-15,28,0,-46,-1,9,-52,-61,70,-23,-16,66,85,300,},
{2,5,-29,-33,-66,-15,28,0,-46,-1,9,-52,-61,70,-23,-16,66,85,300,},
{2,5,-29,44,-66,-15,28,0,-46,-1,9,-52,-61,70,-23,-16,66,85,300,},
{2,5,-29,44,-66,-15,28,0,-46,5,9,-52,6,70,-23,-16,66,85,300,},
{2,42,-29,44,-66,-15,28,-1,-46,5,9,-48,6,70,-23,-16,66,85,300,},
{2,42,-29,44,-66,-15,28,0,-50,-6,25,-72,90,70,-23,-16,66,85,300,},
{2,42,-29,44,-66,-15,28,0,-50,-6,25,-50,90,70,-23,-16,66,85,300,},
{2,42,-29,44,-66,-15,28,0,-50,-6,25,-50,-75,70,-23,-16,66,85,300,},
{2,42,-29,44,-66,-15,28,0,-50,-6,25,-50,-12,70,-23,-16,66,85,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 11:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{2,42,-29,44,-66,-15,28,0,-52,-6,-9,-50,49,70,-23,-16,66,85,300,},
{2,42,-29,44,-66,-15,28,0,-52,-6,-2,-50,49,70,-23,-16,66,85,300,},
{2,42,-29,44,-66,-15,28,0,-52,-6,-2,-50,-52,70,-23,-16,66,85,300,},
{2,42,-29,-7,-66,-15,28,-33,-52,-6,-2,-50,-52,70,-23,-16,66,85,300,},
{2,-20,-36,-25,-66,-15,28,-33,-52,-6,-2,-50,-52,70,-23,-16,66,85,300,},
{2,-21,-36,28,-66,65,28,39,-52,-6,-2,-50,-52,70,-23,-16,66,85,300,},
{2,-21,-36,28,-66,66,28,75,-52,-6,-2,-50,-52,70,-23,-16,66,85,300,},
{2,-21,-36,28,3,44,28,72,-52,-6,-2,-50,-52,70,-23,-16,66,85,300,},
{2,-21,-36,28,3,19,28,26,-52,-6,-2,-50,-52,70,-23,-16,66,85,300,},
{2,-21,-36,28,3,19,28,26,-52,-6,-2,-50,-52,70,-23,-16,66,-4,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 12:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{2,-21,-36,28,3,19,28,26,-52,-6,-2,-50,-52,70,-23,-75,80,-4,300,},
{2,-21,-36,28,3,19,28,26,-52,-6,-2,-50,-52,80,7,-75,80,-4,300,},
{2,14,-36,28,3,19,28,26,-80,-6,18,-50,-52,80,7,-75,80,-4,300,},
{2,14,-36,44,3,19,28,26,-80,-6,18,-50,-52,80,18,-48,35,-66,300,},
{2,14,-36,44,3,19,28,26,-80,-6,32,-50,-52,80,18,-48,59,-66,300,},
{2,14,-36,44,3,19,28,26,-80,1,32,-69,-52,80,18,-48,17,-66,300,},
{2,14,-36,44,3,19,28,26,-80,1,32,-69,-70,80,18,-48,17,90,300,},
{2,14,-36,44,3,19,28,26,-80,1,32,-69,-36,80,18,-48,17,90,300,},
{2,14,-36,44,3,19,28,26,-80,1,1,-69,-37,80,18,-48,17,90,300,},
{0,14,0,46,16,19,80,47,-80,8,1,-75,-70,80,41,0,-13,0,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 13:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{0,14,0,45,16,19,80,47,-80,34,1,-75,-70,80,22,-47,47,42,300,},
{0,14,0,45,17,19,80,47,-80,34,1,-75,-70,80,-11,-70,47,-29,300,},
{0,14,0,44,17,19,80,47,-80,34,1,-75,-70,80,-11,-70,47,90,300,},
{0,14,0,46,-21,18,80,47,-80,34,1,-75,-17,80,-11,-70,47,90,300,},
{0,14,0,44,-22,72,80,47,-80,34,1,-90,-17,80,-11,-32,47,90,300,},
{0,14,0,44,-20,72,80,47,-44,34,1,-85,-17,69,-11,-31,47,90,300,},
{-20,14,0,46,-21,72,80,47,-44,34,1,-85,-17,55,-11,-27,47,90,300,},
{-20,14,0,45,-21,72,80,47,-69,34,1,-85,-17,37,-11,-50,47,80,300,},
{-20,14,0,44,-21,72,80,47,-69,34,1,-85,7,37,-11,-50,47,90,300,},
{-20,14,0,45,-21,72,80,47,-80,7,26,-85,7,63,-11,-50,44,90,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 14:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-20,14,0,46,-21,72,80,47,-80,7,26,-62,7,63,-11,-50,44,90,300,},
{-20,14,0,46,-21,72,80,47,-80,7,26,-62,-71,63,-11,-50,44,90,300,},
{-20,14,0,46,-21,72,80,47,-80,21,52,-63,-75,37,-11,-50,47,77,300,},
{-20,14,0,44,1,-50,80,47,-80,21,52,-63,-75,37,-11,-50,47,77,300,},
{-20,14,0,5,1,-50,7,47,-80,21,52,-63,-75,37,-11,-50,47,77,300,},
{-20,-2,0,5,1,-50,7,47,-80,21,52,-63,-75,37,-11,-50,47,77,300,},
{-20,-2,0,5,40,-50,7,47,-80,21,52,-63,-75,37,-17,-50,47,77,300,},
{-20,-2,0,5,40,-34,0,47,-80,21,52,-63,-75,37,-11,-50,47,77,300,},
{-20,-2,0,5,40,-34,0,-37,-80,21,52,-63,-75,37,-11,-50,47,77,300,},
{-20,-2,0,-90,40,-34,7,-32,-80,21,52,-63,-75,37,-11,-50,47,77,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 15:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{28,-2,0,-90,40,-34,7,-36,-80,21,52,-63,-75,37,-11,-50,47,77,300,},
{42,28,0,-42,40,-34,7,-26,-80,21,52,-63,-75,37,-11,-50,59,-17,300,},
{43,28,0,-30,40,-34,7,-24,-80,21,52,-63,-76,71,-11,-37,59,-17,300,},
{42,28,0,-30,40,-34,7,-11,-80,21,52,-63,-83,80,-11,-79,59,-17,300,},
{41,27,0,-30,40,-34,7,-11,-80,21,52,-63,-78,80,-11,-79,59,76,300,},
{42,28,0,-31,40,-34,7,-11,-80,21,52,-79,0,80,-11,-79,59,76,300,},
{42,28,0,-29,40,-34,7,-11,-14,10,52,-90,30,80,-11,-79,59,76,300,},
{42,28,0,-30,40,-34,7,-11,-14,21,52,-79,0,64,-11,-36,59,76,300,},
{42,28,0,-33,3,-34,7,-24,-49,-1,3,-4,0,64,-11,-36,59,76,300,},
{42,28,0,-31,3,-34,7,-24,-49,-1,3,-4,0,64,-11,-36,59,76,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 16:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{42,28,0,-30,3,-34,7,-24,-49,-1,3,-4,0,64,-11,-75,59,76,300,},
{42,28,0,-30,3,-34,7,-24,-49,-1,3,-4,0,19,-11,-79,59,76,300,},
{42,28,0,-31,3,-34,7,-24,-38,2,3,-31,0,19,-11,-79,59,76,300,},
{42,28,0,-30,3,-34,7,-24,-80,-15,35,-50,11,46,-11,-79,59,76,300,},
{42,28,0,-30,3,-34,7,-24,-80,-15,36,-24,11,46,-11,-79,59,76,300,},
{42,28,0,-30,3,-34,7,-24,-80,-15,34,-24,-71,46,-11,-79,59,76,300,},
{42,28,0,-31,3,-34,7,-24,-80,2,37,-50,-70,36,-11,-79,59,76,300,},
{42,28,0,-32,3,-34,7,-40,-80,2,35,-50,-70,36,-11,-79,59,-34,300,},
{42,28,0,-33,3,-34,7,-40,-80,2,35,-50,-70,36,-11,-23,84,-34,300,},
{42,28,0,-32,3,-34,7,-40,-80,2,35,-50,-70,80,0,-81,90,-34,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 17:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{42,28,0,-29,3,-34,7,-40,-80,2,35,-50,-71,80,0,-81,11,-34,300,},
{42,28,0,-30,3,-34,7,-40,-80,2,36,-50,-67,80,0,-81,11,75,300,},
{42,28,0,-31,3,-34,7,-40,-80,2,34,-50,3,80,0,-81,11,75,300,},
{43,28,0,-30,3,-34,7,-40,-36,2,34,-60,3,80,0,-81,11,74,300,},
{42,28,0,-32,1,-34,57,-40,-42,-27,34,-60,3,54,0,-10,11,74,300,},
{42,28,0,-34,1,-34,0,-40,-68,-27,36,-60,3,54,0,-10,11,74,300,},
{42,28,0,-31,35,-34,0,-40,-80,-10,43,-28,-5,54,0,-10,11,75,300,},
{42,28,0,-30,22,-34,0,-40,-80,-10,43,-28,-78,54,0,-7,11,75,300,},
{42,28,0,-30,22,-34,0,-40,-80,-10,43,-28,-78,66,0,-7,20,-2,300,},
{42,28,0,-30,22,-34,0,-40,-80,-10,43,-28,-78,66,0,-7,20,90,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 18:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{42,28,0,-30,22,-34,0,-11,-80,-10,43,-28,-78,66,0,-7,20,90,300,},
{42,28,0,-30,22,18,0,-11,-80,-10,43,-28,-78,67,0,-7,20,90,300,},
{42,28,0,-30,22,12,0,-50,-80,-10,43,-28,-78,67,0,-7,20,-2,300,},
{42,28,0,-30,22,-60,0,-50,-80,16,43,-28,-78,67,0,-7,20,-19,300,},
{42,28,0,-30,22,-60,0,-50,-80,15,43,-10,-78,67,0,-7,56,-39,300,},
{42,28,0,-30,22,-60,0,-50,-80,15,43,-10,-78,80,0,-76,56,-39,300,},
{42,28,0,-30,22,-60,0,-50,-80,15,43,-10,-78,80,0,-76,28,-39,300,},
{42,28,0,-30,22,-60,0,-50,-80,15,43,-10,-78,80,0,-76,28,-6,300,},
{42,28,0,-30,22,-60,0,-50,-80,25,43,-88,18,80,-20,-36,45,78,300,},
{42,28,0,-30,22,-60,0,-50,-80,25,-14,-88,18,80,-21,-36,55,75,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 19:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{42,28,0,-30,22,-60,0,-50,-80,8,-14,-68,18,80,-21,-36,55,75,300,},
{42,28,0,-30,22,-60,0,-50,-80,8,42,-68,18,80,-21,-36,55,75,300,},
{42,28,0,-30,22,-60,0,-50,-80,8,41,-68,18,80,-21,-36,55,75,300,},
{42,28,0,-30,22,-60,0,-50,-80,8,39,-68,-80,80,-21,-36,55,75,300,},
{42,28,0,-30,22,-60,0,-13,-80,8,39,-68,-80,80,-21,-36,55,30,300,},
{42,28,0,-30,22,-60,0,-15,-80,8,-16,-68,-80,80,-21,-36,55,30,300,},
{42,28,0,-30,22,-60,0,-15,-80,8,-16,-68,-80,80,-21,-36,55,30,300,},
{42,28,0,-30,22,-60,0,-50,-80,25,-5,-59,18,80,-20,-36,55,75,300,},
{42,28,0,-30,22,-60,0,-50,-80,25,-5,-42,18,80,-20,-36,55,75,300,},
{42,28,0,-30,22,-60,0,-50,-80,25,-5,-42,-74,80,-20,-36,55,75,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 20:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{42,28,0,-30,-21,-60,0,-50,-80,25,75,-42,-74,80,-20,25,55,75,300,},
{42,-14,-41,-30,-21,-60,0,-50,-80,35,75,-42,-74,80,-30,25,55,75,300,},
{42,-42,-41,-30,-21,-60,0,-1,-80,35,75,-42,-74,80,-31,25,55,75,300,},
{42,-41,-41,-30,-29,-52,0,1,-80,34,75,-42,-74,80,-29,25,55,75,300,},
{11,-19,-55,-30,-29,-52,0,-3,-80,34,75,-42,-74,80,-29,25,55,75,300,},
{11,-82,-79,-30,-29,-52,0,-3,-80,34,75,-42,-74,80,-29,25,55,75,300,},
{42,2,-41,-30,-77,-52,29,-7,-80,34,75,-42,-74,80,-29,25,55,75,300,},
{42,2,-41,37,-77,-52,29,-7,-80,34,75,-42,-74,80,-29,25,55,75,300,},
{42,2,-41,37,-77,-52,29,-3,-80,34,75,-42,-74,80,-29,25,55,75,300,},
{42,2,-41,37,-77,-52,29,-3,-80,34,75,-42,-74,80,-29,25,70,12,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 21:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{42,2,-41,37,-77,-52,29,-9,-80,34,75,-42,-74,80,-29,-17,70,12,300,},
{42,2,-41,37,-77,-52,29,0,-80,34,75,-42,-74,80,-29,-17,52,80,300,},
{42,2,-41,37,-77,-52,29,-1,-80,34,75,-42,15,80,-29,-19,55,75,300,},
{42,2,-41,37,-77,-52,5,-2,-7,34,75,-78,15,80,-29,-18,55,75,300,},
{42,2,-41,37,-77,-52,29,-1,10,-18,-75,8,15,80,-29,-29,55,75,300,},
{23,2,-41,24,-77,-52,29,-21,-29,-11,-11,34,15,80,-29,-29,55,75,300,},
{23,2,-41,60,-77,-52,29,-56,-30,-48,-11,34,15,80,-29,-29,55,4,300,},
{23,2,-41,60,-77,-52,29,-56,-30,-48,-11,34,15,80,-29,2,79,-47,300,},
{23,2,-41,60,-77,-52,29,-56,-30,-48,-11,34,15,-64,-29,2,79,-47,300,},
{23,2,-41,60,-77,-52,29,18,-30,-48,-11,34,15,-64,-29,2,79,-47,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 22:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{23,2,-41,60,-77,-52,29,18,-30,-43,-11,34,15,-64,-50,2,79,-47,300,},
{23,2,-41,60,-77,-52,29,18,-30,-48,-11,34,15,-64,-29,2,79,-47,300,},
{23,2,-41,60,-77,74,29,60,-30,-48,-11,34,15,-64,-29,2,79,-47,0,},
{23,2,-41,-60,-77,74,29,60,-30,-48,-11,34,90,-64,-29,2,79,-90,0,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
}


#else
	if(step != ConstrainInt(step,0,MOTION_NUM-1)){ params->relay = LOW; return -1;}
int i=0,table = step/10,point = step%10;
switch(table){
case 0:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{84,-22,-80,-60,0,-20,0,46,-24,56,-75,33,0,17,48,0,-45,0,0,},
{84,-22,-80,60,0,-20,0,46,-24,56,-75,33,0,31,48,0,-45,0,0,},
{84,0,-80,60,0,-21,0,46,-24,56,-75,33,0,35,48,0,-45,0,300,},
{84,12,-80,60,0,-20,0,46,-24,56,-75,33,0,52,48,-12,-38,-23,300,},
{84,19,-80,60,0,-47,0,46,-24,56,-75,33,0,61,36,-18,-30,-23,300,},
{84,23,-80,60,0,-46,0,46,-24,57,-72,33,0,76,35,-23,-32,-10,300,},
{84,-9,-80,50,0,-48,0,46,-43,57,-75,35,0,70,33,-23,-27,2,300,},
{84,-8,-80,51,0,-48,0,46,-24,57,-75,35,0,65,40,-23,-32,70,300,},
{84,-13,-80,23,-7,-38,8,46,-10,49,-75,35,0,80,44,-23,-32,23,300,},
{84,-72,-80,23,0,-38,13,46,-22,50,-75,35,26,66,76,11,-32,22,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 1:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{84,-72,-80,-9,-7,-38,13,46,-22,50,-75,35,0,66,76,11,-32,71,300,},
{84,-72,-80,-47,0,-14,13,46,-22,50,-75,35,0,66,90,11,-28,70,300,},
{84,-72,-80,-47,0,-14,13,-1,-22,50,-75,35,0,66,90,11,-28,70,300,},
{84,-72,-80,-47,0,-14,13,1,-22,50,-75,35,0,79,7,0,44,69,300,},
{84,-72,-80,-47,0,-14,13,-30,-22,50,-75,35,0,79,12,0,71,-74,300,},
{84,-72,-80,-47,0,-14,13,-30,-22,50,-75,35,0,64,49,-14,-17,-25,300,},
{84,-72,-80,-47,0,-14,13,71,-22,50,-75,35,0,64,29,1,37,50,300,},
{84,-72,-80,-47,0,-10,6,51,-22,50,-75,35,-25,80,-8,2,75,50,1000,},
{84,-72,-80,-47,0,-14,13,-30,-70,-55,12,16,-25,80,-8,2,75,50,300,},
{84,-72,-80,-47,0,-14,13,-30,-80,-41,0,13,0,80,-8,-1,75,50,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 2:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{84,-72,-80,-47,0,-14,13,-35,-80,-22,47,-47,-65,80,-34,-1,75,50,300,},
{84,-72,-80,-47,0,-14,13,-35,-80,11,70,-47,29,80,-34,-1,75,50,300,},
{21,-72,-80,-47,0,-14,13,-35,-43,11,70,-47,-80,80,-34,-1,75,17,300,},
{22,-72,-80,-47,0,-14,13,-35,-69,11,0,-47,-81,80,-34,-1,85,17,300,},
{20,-72,-80,-47,0,-14,13,-35,-69,11,0,-47,-81,44,-34,-1,85,17,300,},
{21,-72,-80,-47,20,-14,13,-5,-37,11,27,-47,-80,44,-34,-1,85,17,300,},
{21,-72,-80,-47,20,-14,13,-5,-37,11,50,-47,-80,44,-34,-1,85,17,300,},
{21,-72,-80,-47,20,-14,13,-5,-37,11,50,-47,-81,44,-34,-1,85,-7,1000,},
{21,-72,-80,-47,20,-14,13,-5,-37,11,50,-44,-79,80,-21,-52,63,-7,300,},
{21,-72,-80,-47,20,-14,13,-5,-37,11,50,-47,-77,80,-21,-52,63,83,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 3:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-1,50,-80,-47,20,-14,13,-5,-37,11,50,-47,-77,80,-21,-52,63,83,300,},
{-1,50,-7,-47,20,-14,13,-5,-37,11,50,-47,-77,80,-21,-52,63,83,300,},
{-1,50,-7,-47,20,2,0,-5,-37,11,50,-47,-77,80,-21,-52,63,83,300,},
{-40,50,-7,-47,20,2,0,-5,-37,11,50,-47,-77,80,-21,-52,63,83,300,},
{-40,34,-7,-47,20,2,0,-5,-37,11,50,-47,-77,80,-21,-52,63,83,300,},
{-40,34,-7,11,20,2,0,-5,-37,11,50,-47,-77,80,-21,-52,63,83,300,},
{-40,34,-7,11,20,2,0,63,-37,11,50,-47,-77,80,-21,-52,63,83,300,},
{-40,34,-7,11,-28,2,0,33,-37,11,50,-47,-77,80,-21,-52,63,83,300,},
{-40,34,-7,11,-28,2,0,33,-37,11,50,-59,17,80,-21,-52,63,83,300,},
{-40,34,-7,11,-28,2,0,33,-71,11,37,-59,17,80,-21,-52,63,83,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 4:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-40,34,-7,11,-28,2,0,33,-80,11,79,-59,17,80,-21,-52,63,83,300,},
{-40,34,-7,11,-28,2,0,33,-80,11,79,-59,-76,80,-21,-52,63,83,300,},
{-40,34,-7,11,-28,2,0,33,-80,11,79,-59,-76,80,-21,-52,79,0,300,},
{-40,34,-7,11,-28,2,0,33,-80,11,79,-59,-76,14,-10,-52,90,-30,300,},
{-40,34,-7,11,-28,2,0,33,-64,11,36,-59,-76,14,-21,-52,79,0,300,},
{-3,34,-7,24,-28,2,0,33,-64,11,36,-59,-76,49,1,-3,4,0,300,},
{-3,34,-7,24,-28,2,0,33,-64,11,36,-59,-76,49,1,-3,4,0,300,},
{-3,34,-7,24,-28,2,0,33,-64,11,75,-59,-76,49,1,-3,4,0,300,},
{-3,34,-7,24,-28,2,0,33,-19,11,79,-59,-76,49,1,-3,4,0,300,},
{-3,34,-7,24,-28,2,0,33,-19,11,79,-59,-76,38,-2,-3,31,0,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 5:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-3,34,-7,24,-28,2,0,33,-19,11,79,-59,-76,80,-2,-53,50,-11,300,},
{-3,34,-7,24,-28,2,0,33,-19,11,79,-59,-76,80,-2,-53,50,44,300,},
{-3,34,-7,40,-28,2,0,33,-19,11,79,-59,34,80,-2,-53,50,44,300,},
{-3,34,-7,40,-28,2,0,33,-19,11,23,-84,34,80,-2,-53,50,44,300,},
{-3,34,-7,40,-28,2,0,33,-80,0,81,-90,34,80,-2,-53,50,44,300,},
{-3,34,-7,40,-28,2,0,33,-80,0,81,-11,34,80,-2,-53,50,44,300,},
{-3,34,-7,40,-28,2,0,33,-80,0,81,-11,-75,80,-2,-53,50,44,300,},
{-3,34,-7,40,-28,2,0,33,-80,0,81,-11,-75,80,-2,-53,50,-3,300,},
{-3,34,-7,40,-28,2,0,33,-80,0,81,-11,-74,36,-2,-53,60,-3,300,},
{-1,34,-57,40,-28,2,0,33,-54,0,10,-11,-74,42,27,-53,60,-3,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 6:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-1,34,0,40,-28,2,0,33,-54,0,10,-11,-74,68,27,-53,60,-3,300,},
{-35,34,0,40,-28,2,0,33,-54,0,10,-11,-75,80,27,-62,60,-3,300,},
{-22,34,0,40,-28,2,0,33,-54,0,7,-32,-75,80,27,-30,38,3,300,},
{-22,34,0,40,-28,2,0,33,-80,0,7,-66,-75,80,27,-30,38,64,300,},
{-22,34,0,40,-28,2,0,33,-54,10,7,-66,-79,80,2,-30,38,64,300,},
{-22,34,0,-6,-28,2,0,33,-54,10,7,-66,-82,80,2,-30,38,64,300,},
{-22,-3,0,-6,-28,2,0,33,-54,10,7,-66,-81,80,-28,-30,38,64,300,},
{-22,-2,0,51,-28,2,0,33,-54,11,7,-65,-81,80,-29,-30,48,64,300,},
{-22,-2,0,39,-28,2,0,33,-54,11,7,-64,-80,80,-29,-51,48,36,300,},
{-22,-2,0,40,-28,2,0,33,-54,10,7,-64,-77,80,-27,-51,38,66,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 7:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-22,34,0,40,-28,2,0,33,-54,23,7,-43,-80,80,-27,-52,38,66,300,},
{-22,34,0,39,-28,2,0,33,-54,23,7,-80,13,80,-29,-52,38,66,300,},
{-22,34,0,40,-28,2,0,33,-80,10,55,-80,13,80,-28,-52,38,66,300,},
{-22,34,0,40,-28,2,0,33,-80,23,55,-48,-20,80,-28,-52,38,66,300,},
{-22,34,0,41,-28,2,0,33,-80,23,55,-48,-75,80,-28,-52,38,19,300,},
{-4,34,-12,41,-28,2,0,33,-80,23,-36,-48,-75,80,-28,-52,59,70,300,},
{-4,34,-12,41,-28,2,0,33,-80,23,-36,-90,22,80,-28,-52,59,70,300,},
{-4,34,-12,41,-28,2,0,33,-80,23,45,-90,22,80,-28,-52,59,70,300,},
{-4,34,-12,41,-28,2,0,33,-80,23,45,-56,22,80,-28,-52,59,70,300,},
{-4,34,-12,41,-28,2,0,33,-80,23,45,-56,-76,80,-28,-52,59,70,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 8:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-4,34,-12,41,-28,2,0,33,-80,23,45,-56,-76,80,-28,-52,90,-6,300,},
{-4,34,-12,41,-28,2,0,33,-80,23,45,-56,-76,80,-28,7,90,-6,300,},
{-4,34,-12,41,-28,2,0,33,-80,23,45,-56,-76,80,-28,7,51,-6,300,},
{-4,34,-12,41,-28,2,0,33,-80,23,45,-56,-76,80,-28,7,51,68,300,},
{18,34,-28,41,-28,2,0,33,-80,23,-9,-56,-76,80,-28,-36,51,68,300,},
{18,34,-28,41,-28,2,0,33,-80,23,-9,-56,-76,80,-28,-36,51,68,300,},
{18,34,-28,41,-28,2,0,33,-80,23,-9,-56,-76,80,-28,-36,51,-37,300,},
{18,34,-28,41,-28,2,0,33,-80,23,-9,-56,-90,80,-28,-36,90,-37,300,},
{18,34,-28,41,-28,2,0,33,-80,23,-9,-56,-90,61,-28,27,90,-37,300,},
{21,15,-28,41,-28,2,0,33,-55,23,-9,-56,-90,69,4,27,90,-37,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 9:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{21,15,-28,41,-28,2,0,33,-55,23,-9,-56,-90,46,1,-9,80,-90,300,},
{21,15,-28,41,-28,2,0,33,-55,23,-9,-40,-90,46,1,-9,52,-90,300,},
{21,15,-28,41,-28,2,0,33,-55,23,-9,-40,-90,46,1,-9,52,70,300,},
{21,15,-28,41,-31,12,39,33,-55,23,-9,-39,-68,46,1,-9,52,65,300,},
{21,15,-28,41,-31,12,39,33,-55,23,-9,-40,-14,46,1,-9,52,65,300,},
{21,15,-28,41,-31,12,39,33,-80,23,26,-90,-14,46,1,-9,52,65,300,},
{21,15,-28,41,-31,12,39,33,-80,23,26,-66,-14,46,1,-9,52,65,300,},
{21,15,-28,41,-31,12,39,33,-80,23,26,-66,-84,46,1,-9,52,65,300,},
{21,15,-28,11,-31,12,39,33,-80,23,27,-66,-85,46,1,-9,52,61,300,},
{21,15,-28,11,-51,18,39,33,-70,23,16,-66,-85,46,1,-9,52,61,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 10:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{21,15,-28,11,-51,60,39,33,-70,23,16,-66,-85,46,1,-9,52,61,300,},
{34,15,-28,0,-56,-5,29,33,-70,23,16,-66,-85,46,1,-9,52,61,300,},
{66,15,-28,0,-2,-5,29,33,-70,23,16,-66,-85,46,1,-9,52,61,300,},
{66,15,-28,0,-2,-5,29,-44,-70,23,16,-66,-85,46,1,-9,52,61,300,},
{66,15,-28,0,-2,-5,29,-44,-70,23,16,-66,-85,46,-5,-9,52,-6,300,},
{66,15,-28,1,-2,-42,29,-44,-70,23,16,-66,-85,46,-5,-9,48,-6,300,},
{66,15,-28,0,-2,-42,29,-44,-70,23,16,-66,-85,50,6,-25,72,-90,300,},
{66,15,-28,0,-2,-42,29,-44,-70,23,16,-66,-85,50,6,-25,50,-90,300,},
{66,15,-28,0,-2,-42,29,-44,-70,23,16,-66,-85,50,6,-25,50,75,300,},
{66,15,-28,0,-2,-42,29,-44,-70,23,16,-66,-85,50,6,-25,50,12,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 11:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{66,15,-28,0,-2,-42,29,-44,-70,23,16,-66,-85,52,6,9,50,-49,300,},
{66,15,-28,0,-2,-42,29,-44,-70,23,16,-66,-85,52,6,2,50,-49,300,},
{66,15,-28,0,-2,-42,29,-44,-70,23,16,-66,-85,52,6,2,50,52,300,},
{66,15,-28,33,-2,-42,29,7,-70,23,16,-66,-85,52,6,2,50,52,300,},
{66,15,-28,33,-2,20,36,25,-70,23,16,-66,-85,52,6,2,50,52,300,},
{66,-65,-28,-39,-2,21,36,-28,-70,23,16,-66,-85,52,6,2,50,52,300,},
{66,-66,-28,-75,-2,21,36,-28,-70,23,16,-66,-85,52,6,2,50,52,300,},
{-3,-44,-28,-72,-2,21,36,-28,-70,23,16,-66,-85,52,6,2,50,52,300,},
{-3,-19,-28,-26,-2,21,36,-28,-70,23,16,-66,-85,52,6,2,50,52,300,},
{-3,-19,-28,-26,-2,21,36,-28,-70,23,16,-66,4,52,6,2,50,52,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 12:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-3,-19,-28,-26,-2,21,36,-28,-70,23,75,-80,4,52,6,2,50,52,300,},
{-3,-19,-28,-26,-2,21,36,-28,-80,-7,75,-80,4,52,6,2,50,52,300,},
{-3,-19,-28,-26,-2,-14,36,-28,-80,-7,75,-80,4,80,6,-18,50,52,300,},
{-3,-19,-28,-26,-2,-14,36,-44,-80,-18,48,-35,66,80,6,-18,50,52,300,},
{-3,-19,-28,-26,-2,-14,36,-44,-80,-18,48,-59,66,80,6,-32,50,52,300,},
{-3,-19,-28,-26,-2,-14,36,-44,-80,-18,48,-17,66,80,-1,-32,69,52,300,},
{-3,-19,-28,-26,-2,-14,36,-44,-80,-18,48,-17,-90,80,-1,-32,69,70,300,},
{-3,-19,-28,-26,-2,-14,36,-44,-80,-18,48,-17,-90,80,-1,-32,69,36,300,},
{-3,-19,-28,-26,-2,-14,36,-44,-80,-18,48,-17,-90,80,-1,-1,69,37,300,},
{-16,-19,-80,-47,0,-14,0,-46,-80,-41,0,13,0,80,-8,-1,75,70,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 13:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-16,-19,-80,-47,0,-14,0,-45,-80,-22,47,-47,-42,80,-34,-1,75,70,300,},
{-17,-19,-80,-47,0,-14,0,-45,-80,11,70,-47,29,80,-34,-1,75,70,300,},
{-17,-19,-80,-47,0,-14,0,-44,-80,11,70,-47,-90,80,-34,-1,75,70,300,},
{21,-18,-80,-47,0,-14,0,-46,-80,11,70,-47,-90,80,-34,-1,75,17,300,},
{22,-72,-80,-47,0,-14,0,-44,-80,11,32,-47,-90,80,-34,-1,90,17,300,},
{20,-72,-80,-47,0,-14,0,-44,-69,11,31,-47,-90,44,-34,-1,85,17,300,},
{21,-72,-80,-47,20,-14,0,-46,-55,11,27,-47,-90,44,-34,-1,85,17,300,},
{21,-72,-80,-47,20,-14,0,-45,-37,11,50,-47,-80,69,-34,-1,85,17,300,},
{21,-72,-80,-47,20,-14,0,-44,-37,11,50,-47,-90,69,-34,-1,85,-7,300,},
{21,-72,-80,-47,20,-14,0,-45,-63,11,50,-44,-90,80,-7,-26,85,-7,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 14:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{21,-72,-80,-47,20,-14,0,-46,-63,11,50,-44,-90,80,-7,-26,62,-7,300,},
{21,-72,-80,-47,20,-14,0,-46,-63,11,50,-44,-90,80,-7,-26,62,71,300,},
{21,-72,-80,-47,20,-14,0,-46,-37,11,50,-47,-77,80,-21,-52,63,75,300,},
{-1,50,-80,-47,20,-14,0,-44,-37,11,50,-47,-77,80,-21,-52,63,75,300,},
{-1,50,-7,-47,20,-14,0,-5,-37,11,50,-47,-77,80,-21,-52,63,75,300,},
{-1,50,-7,-47,20,2,0,-5,-37,11,50,-47,-77,80,-21,-52,63,75,300,},
{-40,50,-7,-47,20,2,0,-5,-37,17,50,-47,-77,80,-21,-52,63,75,300,},
{-40,34,0,-47,20,2,0,-5,-37,11,50,-47,-77,80,-21,-52,63,75,300,},
{-40,34,0,37,20,2,0,-5,-37,11,50,-47,-77,80,-21,-52,63,75,300,},
{-40,34,-7,32,20,2,0,90,-37,11,50,-47,-77,80,-21,-52,63,75,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 15:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-40,34,-7,36,-28,2,0,90,-37,11,50,-47,-77,80,-21,-52,63,75,300,},
{-40,34,-7,26,-42,-28,0,42,-37,11,50,-59,17,80,-21,-52,63,75,300,},
{-40,34,-7,24,-43,-28,0,30,-71,11,37,-59,17,80,-21,-52,63,76,300,},
{-40,34,-7,11,-42,-28,0,30,-80,11,79,-59,17,80,-21,-52,63,83,300,},
{-40,34,-7,11,-41,-27,0,30,-80,11,79,-59,-76,80,-21,-52,63,78,300,},
{-40,34,-7,11,-42,-28,0,31,-80,11,79,-59,-76,80,-21,-52,79,0,300,},
{-40,34,-7,11,-42,-28,0,29,-80,11,79,-59,-76,14,-10,-52,90,-30,300,},
{-40,34,-7,11,-42,-28,0,30,-64,11,36,-59,-76,14,-21,-52,79,0,300,},
{-3,34,-7,24,-42,-28,0,33,-64,11,36,-59,-76,49,1,-3,4,0,300,},
{-3,34,-7,24,-42,-28,0,31,-64,11,36,-59,-76,49,1,-3,4,0,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 16:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-3,34,-7,24,-42,-28,0,30,-64,11,75,-59,-76,49,1,-3,4,0,300,},
{-3,34,-7,24,-42,-28,0,30,-19,11,79,-59,-76,49,1,-3,4,0,300,},
{-3,34,-7,24,-42,-28,0,31,-19,11,79,-59,-76,38,-2,-3,31,0,300,},
{-3,34,-7,24,-42,-28,0,30,-46,11,79,-59,-76,80,15,-35,50,-11,300,},
{-3,34,-7,24,-42,-28,0,30,-46,11,79,-59,-76,80,15,-36,24,-11,300,},
{-3,34,-7,24,-42,-28,0,30,-46,11,79,-59,-76,80,15,-34,24,71,300,},
{-3,34,-7,24,-42,-28,0,31,-36,11,79,-59,-76,80,-2,-37,50,70,300,},
{-3,34,-7,40,-42,-28,0,32,-36,11,79,-59,34,80,-2,-35,50,70,300,},
{-3,34,-7,40,-42,-28,0,33,-36,11,23,-84,34,80,-2,-35,50,70,300,},
{-3,34,-7,40,-42,-28,0,32,-80,0,81,-90,34,80,-2,-35,50,70,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 17:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-3,34,-7,40,-42,-28,0,29,-80,0,81,-11,34,80,-2,-35,50,71,300,},
{-3,34,-7,40,-42,-28,0,30,-80,0,81,-11,-75,80,-2,-36,50,67,300,},
{-3,34,-7,40,-42,-28,0,31,-80,0,81,-11,-75,80,-2,-34,50,-3,300,},
{-3,34,-7,40,-43,-28,0,30,-80,0,81,-11,-74,36,-2,-34,60,-3,300,},
{-1,34,-57,40,-42,-28,0,32,-54,0,10,-11,-74,42,27,-34,60,-3,300,},
{-1,34,0,40,-42,-28,0,34,-54,0,10,-11,-74,68,27,-36,60,-3,300,},
{-35,34,0,40,-42,-28,0,31,-54,0,10,-11,-75,80,10,-43,28,5,300,},
{-22,34,0,40,-42,-28,0,30,-54,0,7,-11,-75,80,10,-43,28,78,300,},
{-22,34,0,40,-42,-28,0,30,-66,0,7,-20,2,80,10,-43,28,78,300,},
{-22,34,0,40,-42,-28,0,30,-66,0,7,-20,-90,80,10,-43,28,78,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 18:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-22,34,0,11,-42,-28,0,30,-66,0,7,-20,-90,80,10,-43,28,78,300,},
{-22,-18,0,11,-42,-28,0,30,-67,0,7,-20,-90,80,10,-43,28,78,300,},
{-22,-12,0,50,-42,-28,0,30,-67,0,7,-20,2,80,10,-43,28,78,300,},
{-22,60,0,50,-42,-28,0,30,-67,0,7,-20,19,80,-16,-43,28,78,300,},
{-22,60,0,50,-42,-28,0,30,-67,0,7,-56,39,80,-15,-43,10,78,300,},
{-22,60,0,50,-42,-28,0,30,-80,0,76,-56,39,80,-15,-43,10,78,300,},
{-22,60,0,50,-42,-28,0,30,-80,0,76,-28,39,80,-15,-43,10,78,300,},
{-22,60,0,50,-42,-28,0,30,-80,0,76,-28,6,80,-15,-43,10,78,300,},
{-22,60,0,50,-42,-28,0,30,-80,20,36,-45,-78,80,-25,-43,88,-18,300,},
{-22,60,0,50,-42,-28,0,30,-80,21,36,-55,-75,80,-25,14,88,-18,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 19:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{-22,60,0,50,-42,-28,0,30,-80,21,36,-55,-75,80,-8,14,68,-18,300,},
{-22,60,0,50,-42,-28,0,30,-80,21,36,-55,-75,80,-8,-42,68,-18,300,},
{-22,60,0,50,-42,-28,0,30,-80,21,36,-55,-75,80,-8,-41,68,-18,300,},
{-22,60,0,50,-42,-28,0,30,-80,21,36,-55,-75,80,-8,-39,68,80,300,},
{-22,60,0,13,-42,-28,0,30,-80,21,36,-55,-30,80,-8,-39,68,80,300,},
{-22,60,0,15,-42,-28,0,30,-80,21,36,-55,-30,80,-8,16,68,80,300,},
{-22,60,0,15,-42,-28,0,30,-80,21,36,-55,-30,80,-8,16,68,80,300,},
{-22,60,0,50,-42,-28,0,30,-80,20,36,-55,-75,80,-25,5,59,-18,300,},
{-22,60,0,50,-42,-28,0,30,-80,20,36,-55,-75,80,-25,5,42,-18,300,},
{-22,60,0,50,-42,-28,0,30,-80,20,36,-55,-75,80,-25,5,42,74,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 20:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{21,60,0,50,-42,-28,0,30,-80,20,-25,-55,-75,80,-25,-75,42,74,300,},
{21,60,0,50,-42,14,41,30,-80,30,-25,-55,-75,80,-35,-75,42,74,300,},
{21,60,0,1,-42,42,41,30,-80,31,-25,-55,-75,80,-35,-75,42,74,300,},
{29,52,0,-1,-42,41,41,30,-80,29,-25,-55,-75,80,-34,-75,42,74,300,},
{29,52,0,3,-11,19,55,30,-80,29,-25,-55,-75,80,-34,-75,42,74,300,},
{29,52,0,3,-11,82,79,30,-80,29,-25,-55,-75,80,-34,-75,42,74,300,},
{77,52,-29,7,-42,-2,41,30,-80,29,-25,-55,-75,80,-34,-75,42,74,300,},
{77,52,-29,7,-42,-2,41,-37,-80,29,-25,-55,-75,80,-34,-75,42,74,300,},
{77,52,-29,3,-42,-2,41,-37,-80,29,-25,-55,-75,80,-34,-75,42,74,300,},
{77,52,-29,3,-42,-2,41,-37,-80,29,-25,-70,-12,80,-34,-75,42,74,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 21:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{77,52,-29,9,-42,-2,41,-37,-80,29,17,-70,-12,80,-34,-75,42,74,300,},
{77,52,-29,0,-42,-2,41,-37,-80,29,17,-52,-80,80,-34,-75,42,74,300,},
{77,52,-29,1,-42,-2,41,-37,-80,29,19,-55,-75,80,-34,-75,42,-15,300,},
{77,52,-5,2,-42,-2,41,-37,-80,29,18,-55,-75,7,-34,-75,78,-15,300,},
{77,52,-29,1,-42,-2,41,-37,-80,29,29,-55,-75,-10,18,75,-8,-15,300,},
{77,52,-29,21,-23,-2,41,-24,-80,29,29,-55,-75,29,11,11,-34,-15,300,},
{77,52,-29,56,-23,-2,41,-60,-80,29,29,-55,-4,30,48,11,-34,-15,300,},
{77,52,-29,56,-23,-2,41,-60,-80,29,-2,-79,47,30,48,11,-34,-15,300,},
{77,52,-29,56,-23,-2,41,-60,64,29,-2,-79,47,30,48,11,-34,-15,300,},
{77,52,-29,-18,-23,-2,41,-60,64,29,-2,-79,47,30,48,11,-34,-15,300,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
case 22:
{Params::data motion[][TOTAL_ARMS_NUM] = {
{77,52,-29,-18,-23,-2,41,-60,64,50,-2,-79,47,30,43,11,-34,-15,300,},
{77,52,-29,-18,-23,-2,41,-60,64,29,-2,-79,47,30,48,11,-34,-15,300,},
{77,-74,-29,-60,-23,-2,41,-60,64,29,-2,-79,47,30,48,11,-34,-15,0,},
{77,-74,-29,-60,-23,-2,41,60,64,29,-2,-79,90,30,48,11,-34,-90,0,},
};
int i=0;
for(int j=0;j<ARM_NUM;j++,i++){params->leftArms[j] = motion[point][i];}
for(int j=0;j<ARM_NUM;j++,i++){params->rightArms[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->leftFoots[j] = motion[point][i];}
for(int j=0;j<FOOT_NUM;j++,i++){params->rightFoots[j] = motion[point][i];}
return motion[step%10][TOTAL_ARMS_NUM-1];}
}


#endif
}
